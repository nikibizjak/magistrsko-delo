map :: ('a -> 'b) -> List 'a -> List 'b
map f xs =
    case xs of
    | Nil -> Nil
    | Cons y ys -> Cons (f y) (map f ys);;

foldr :: ('a -> 'b -> 'b) -> 'b -> List 'a -> 'b
foldr f acc xs =
    case xs of
    | Nil -> acc
    | Cons y ys -> foldr f (f y acc) ys;;